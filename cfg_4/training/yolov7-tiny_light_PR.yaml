# parameters
nc: 5  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# yolov7-tiny backbone
backbone:
  # [from, number, module, args] c2, k=1, s=1, p=None, g=1, act=True
  [[-1, 1, Conv, [32, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  # 0-P1/2

   [-1, 1, Conv, [64, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  # 1-P2/4

   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-2, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 7

   [-1, 1, MP, []],  # 8-P3/8
   # ELAN-G
   # [from, k, ratio, dw_size, s]
   [-1, 1, GhostCBL, [64, 1, 2, 5, 1]],
   [-2, 1, GhostCBL, [64, 1, 2, 5, 1]],
   [-1, 1, GhostCBL, [64, 3, 2, 5, 1]],
   [-1, 1, GhostCBL, [64, 3, 2, 5, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, GhostCBL, [128, 1, 2, 5, 1]],                   # 14

   [-1, 1, MP, []],  # 15-P4/16
   # ELAN-G
   [-1, 1, GhostCBL, [128, 1, 2, 5, 1]],
   [-2, 1, GhostCBL, [128, 1, 2, 5, 1]],
   [-1, 1, GhostCBL, [128, 3, 2, 5, 1]],
   [-1, 1, GhostCBL, [128, 3, 2, 5, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, GhostCBL, [256, 1, 2, 5, 1]],                  # 21

   [-1, 1, MP, []],  # 22-P5/32
    # ELAN-G
   [-1, 1, GhostCBL, [256, 1, 2, 5, 1]],
   [-2, 1, GhostCBL, [256, 1, 2, 5, 1]],
   [-1, 1, GhostCBL, [256, 3, 2, 5, 1]],
   [-1, 1, GhostCBL, [256, 3, 2, 5, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, GhostCBL, [512, 1, 2, 5, 1]],                  # 28
  ]

# yolov7-tiny head
head:
  [[-1, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-2, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, SP, [5]],
   [-2, 1, SP, [9]],
   [-3, 1, SP, [13]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, -7], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 37

   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [21, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # route backbone P4
   [[-1, -2], 1, Concat, [1]],

   # ELAN-G
   # [from, k, ratio, dw_size, s]
   [-1, 1, GhostCBL, [64, 1, 2, 5, 1]],
   [-2, 1, GhostCBL, [64, 1, 2, 5, 1]],
   [-1, 1, GhostCBL, [64, 3, 2, 5, 1]],
   [-1, 1, GhostCBL, [64, 3, 2, 5, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, GhostCBL, [128, 1, 2, 5, 1]],                   # 47

   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [14, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # route backbone P3
   [[-1, -2], 1, Concat, [1]],

   # ELAN-GR
   # [from, k, ratio, dw_size, s] [64, 1, 2, 5, 1]
   [-1, 1, GSCBL, [64, 1, 2, 5, 1]],
   # split
   [-1, 1, Chunk, [2, 1, True]],
   [-2, 1, Chunk, [2, 1, False]],
   # GR Block
   [-1, 1, GSCBL, [32, 3, 2, 5, 1]],
   [-1, 1, GSCBL, [32, 3, 2, 5, 1]],
   [[-1, -3], 1, Shortcut, [0]],
   # concat+downchannel
   [[-1, -5, -6], 1, Concat, [1]],  # concat[32,32,64]=128
   [-1, 1, GSCBL, [64, 1, 2, 5, 1]],  # 59
   [-1, 1, CrissCrossAttention, [64]],
   [-1, 1, CrissCrossAttention, [64]],# 61

   [-1, 1, Conv, [128, 3, 2, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, 47], 1, Concat, [1]],
   [[-1, 21], 1, BiFPN_Add2, [256, 256]],  # BiFPN 63+47+21 (256+256=256) 64

    # ELAN-GR
    # [from, k, ratio, dw_size, s] [64, 1, 2, 5, 1]
   [-1, 1, GSCBL, [128, 1, 2, 5, 1]],
    # split
   [-1, 1, Chunk, [2, 1, True]],
   [-2, 1, Chunk, [2, 1, False]],
    # GR Block
   [-1, 1, GSCBL, [64, 3, 2, 5, 1]],
   [-1, 1, GSCBL, [64, 3, 2, 5, 1]],
   [[-1, -3], 1, Shortcut, [0]],
   # concat+downchannel
   [[-1, -5, -6], 1, Concat, [1]],  # concat[64,64,128]=256
   [-1, 1, GSCBL, [128, 1, 2, 5, 1]],  # 72
   [-1, 1, CrissCrossAttention, [128]],
   [-1, 1, CrissCrossAttention, [128]],# 74

   [-1, 1, Conv, [256, 3, 2, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, 37], 1, Concat, [1]],

    # ELAN-GR
    # [from, k, ratio, dw_size, s] [64, 1, 2, 5, 1]
   [-1, 1, GSCBL, [256, 1, 2, 5, 1]],
    # split
   [-1, 1, Chunk, [2, 1, True]],
   [-2, 1, Chunk, [2, 1, False]],
    # GR Block
   [-1, 1, GSCBL, [128, 3, 2, 5, 1]],
   [-1, 1, GSCBL, [128, 3, 2, 5, 1]],
   [[-1, -3], 1, Shortcut, [0]],
   # concat+downchannel
   [[-1, -5, -6], 1, Concat, [1]],  # concat[128,128,256]=512
   [-1, 1, GSCBL, [256, 1, 2, 5, 1]],  # 84
   [-1, 1, CrissCrossAttention, [256]],
   [-1, 1, CrissCrossAttention, [256]],# 86

   [61, 1, Conv, [128, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [74, 1, Conv, [256, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [86, 1, Conv, [512, 3, 1, None, 1, nn.LeakyReLU(0.1)]],

   [[87,88,89], 1, IDetect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
